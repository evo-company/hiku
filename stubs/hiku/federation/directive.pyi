from _typeshed import Incomplete
from hiku.directives import DirectiveBase as DirectiveBase
from typing import Any

class Key(DirectiveBase):
    fields: Incomplete
    def __init__(self, fields: str) -> None: ...
    def accept(self, visitor: Any) -> Any: ...

class Provides(DirectiveBase):
    fields: Incomplete
    def __init__(self, fields: str) -> None: ...
    def accept(self, visitor: Any) -> Any: ...

class Requires(DirectiveBase):
    fields: Incomplete
    def __init__(self, fields: str) -> None: ...
    def accept(self, visitor: Any) -> Any: ...

class External(DirectiveBase):
    def accept(self, visitor: Any) -> Any: ...

class Extends(DirectiveBase):
    def accept(self, visitor: Any) -> Any: ...
