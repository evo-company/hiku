name: Test
on:
  # Trigger the workflow on pushes to only the 'master' branch (this avoids duplicate checks being run pull requests)
  push:
    branches: [master]
  # Trigger the workflow on any pull request
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get Changelog testing
      id: get-changelog
      run: |
        TAGS=($(git tag --sort=-version:refname | head -n 2))
        echo $TAGS
        FROM_TAG=${TAGS[2]}
        TO_TAG=${TAGS[1]}

        echo $FROM_TAG and $TO_TAG
        git status

        git log --oneline --decorate "${FROM_TAG}..${TO_TAG}" | tail -n +2 | awk '{print "* "$0}' > .changelog.md
    - name: Set up PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pdm sync -d -G test -G dev
        pip install tox tox-pdm tox-gh-actions
    - name: Run flake8
      if: startsWith(matrix.python-version, '3.7')
      run: pdm run flake
    - name: Run mypy
      if: startsWith(matrix.python-version, '3.7')
      run: pdm run mypy
    - name: Run black
      if: startsWith(matrix.python-version, '3.7')
      run: pdm run fmt --check
    - name: Run unit tests
      run: tox run -- --cov-report=term
      
  federation-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Lets
      uses: lets-cli/lets-action@v1.1
      with:
        version: latest
    - name: Test federation compatibility
      run: timeout 600 lets federation-compatibility-test
